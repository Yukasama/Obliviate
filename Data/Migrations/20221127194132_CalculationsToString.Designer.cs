// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Obliviate.Data;

#nullable disable

namespace Obliviate.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221127194132_CalculationsToString")]
    partial class CalculationsToString
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Obliviate.Models.Stock", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AcceptedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountPayables")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountsPayables")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountsReceivables")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccumulatedOtherComprehensiveIncomeLoss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AcquisitionsNet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetTurnover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AverageInventory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AveragePayables")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AverageReceivables")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Beta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookValuePerShare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalendarYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapexPerShare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapexToDepreciation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapexToOperatingCashFlow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapexToRevenue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapitalExpenditure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapitalExpenditureCoverageRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapitalLeaseObligations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CashAndCashEquivalents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CashAndShortTermInvestments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CashAtBeginningOfPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CashAtEndOfPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CashConversionCycle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CashFlowCoverageRatios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CashFlowToDebtRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CashPerShare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CashRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ceo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Change")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangeInWorkingCapital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangeOverTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangePercent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Changes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Close")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommonStock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommonStockIssued")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommonStockRepurchased")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEquityMultiplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostAndExpenses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostOfRevenue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cusip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DaysOfInventoryOnHand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DaysOfInventoryOutstanding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DaysOfPayablesOutstanding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DaysOfSalesOutstanding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DaysPayablesOutstanding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DaysSalesOutstanding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dcf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DcfDiff")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtEquityRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtRepayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtToAssets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtToEquity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeferredIncomeTax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeferredRevenue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeferredRevenueNonCurrent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeferredTaxLiabilitiesNonCurrent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepreciationAndAmortization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DividendPaidAndCapexCoverageRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DividendPayoutRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DividendYield")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DividendsPaid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ESGScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EYE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EarningsYield")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EbitPerRevenue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ebitda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ebitdaratio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EbtPerEbit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EffectOfForexChangesOnCash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EffectiveTaxRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnterpriseValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnterpriseValueMultiple")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnterpriseValueOverEBITDA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Epsdiluted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedEbitAvg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedEbitHigh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedEbitLow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedEbitdaAvg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedEbitdaHigh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedEbitdaLow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedEpsAvg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedEpsHigh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedEpsLow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedNetIncomeAvg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedNetIncomeHigh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedNetIncomeLow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedRevenueAvg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedRevenueHigh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedRevenueLow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedSgaExpenseAvg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedSgaExpenseHigh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedSgaExpenseLow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvToFreeCashFlow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvToOperatingCashFlow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvToSales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exchange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExchangeShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FillingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinalLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FixedAssetTurnover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeCashFlow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeCashFlowOperatingCashFlowRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeCashFlowPerShare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeCashFlowYield")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullTimeEmployees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneralAndAdministrativeExpenses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Goodwill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoodwillAndstringangibleAssets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrahamNetNet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrahamNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrossProfit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrossProfitMargin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrossProfitRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("High")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HistoryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncomeBeforeTax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncomeBeforeTaxRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncomeQuality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncomeTaxExpense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Industry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inventory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventoryTurnover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvestedCapital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvestmentsInPropertyPlantAndEquipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpoDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsActivelyTrading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsAdr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsEtf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsFund")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastDiv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Low")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Minoritystringerest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MktCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetCashProvidedByOperatingActivities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetCashUsedForInvestingActivites")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetCashUsedProvidedByFinancingActivities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetChangeInCash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetCurrentAssetValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetDebt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetDebtToEBITDA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetIncome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetIncomePerEBT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetIncomePerShare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetIncomeRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetProfitMargin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetReceivables")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberAnalystEstimatedRevenue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberAnalystsEstimatedEps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Open")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingCashFlow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingCashFlowPerShare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingCashFlowSalesRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingCycle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingExpenses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingIncome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingIncomeRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingProfitMargin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherAssets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherCurrentAssets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherCurrentLiabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherExpenses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherFinancingActivites")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherInvestingActivites")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherLiabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherNonCashItems")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherNonCurrentAssets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherNonCurrentLiabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherWorkingCapital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthertotalStockholdersEquity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayablesTurnover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayoutRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PbRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PeRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Period")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PfcfRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pocfratio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredStock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PretaxProfitMargin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceBookValueRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceCashFlowRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceEarningsRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceEarningsToGrowthRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceFairValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceSalesRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceToBookRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceToFreeCashFlowsRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceToOperatingCashFlowsRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceToSalesRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyPlantEquipmentNet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PtbRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchasesOfInvestments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuickRatio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RSI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatingDetailsDCFRecommendation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatingDetailsDCFScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatingDetailsDERecommendation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatingDetailsDEScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatingDetailsPBRecommendation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatingDetailsPBScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatingDetailsPERecommendation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatingDetailsPEScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatingDetailsROARecommendation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatingDetailsROAScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatingDetailsROERecommendation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatingDetailsROEScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatingRecommendation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RatingScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceivablesTurnover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportedCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchAndDdevelopementToRevenue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResearchAndDevelopmentExpenses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetainedEarnings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnOnAssets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnOnCapitalEmployed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnOnEquity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnOnTangibleAssets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Revenue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RevenuePerShare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMA100")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMA20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMA200")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMA50")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesGeneralAndAdministrativeToRevenue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesMaturitiesOfInvestments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellingAndMarketingExpenses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellingGeneralAndAdministrativeExpenses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShareholdersEquityPerShare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortTermCoverageRatios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortTermDebt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortTermInvestments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockBasedCompensation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockBasedCompensationToRevenue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TangibleAssetValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TangibleBookValuePerShare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetConsensus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetHigh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetLow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetMedian")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxAssets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxPayables")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalAssets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalCurrentAssets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalCurrentLiabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalDebt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalDebtToCapitalization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalEquity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalInvestments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalLiabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalLiabilitiesAndStockholdersEquity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalLiabilitiesAndTotalEquity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalNonCurrentAssets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalNonCurrentLiabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalOtherIncomeExpensesNet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalStockholdersEquity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VolAvg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Volume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vwap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WPR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeightedAverageShsOut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeightedAverageShsOutDil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingCapital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("environmentalScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("governanceScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("peersList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("socialScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stringTermDebt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stringTermDebtToCapitalization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stringTermInvestments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stringangibleAssets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stringangiblesToTotalAssets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stringerestCoverage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stringerestDebtPerShare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stringerestExpense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stringerestIncome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Symbol");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
